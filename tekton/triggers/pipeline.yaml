---
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: trigger-pipeline
  namespace: sample-tracing
spec:
  resources:
    - name: source-repo
      type: git
    - name: image-source
      type: image
  tasks:
    - name: build-docker-image
      taskRef:
        name: build-docker-image
      resources:
        inputs:
          - name: source-repo
            resource: source-repo
        outputs:
          - name: builtImage
            resource: image-source
    - name: deploy
      taskRef:
        name: deploy
      runAfter:
        - build-docker-image
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: deploy
  namespace: sample-tracing
spec:
  steps:
    - name: rollout-gateway
      image: quay.io/openshift/origin-cli:latest
      command: ["/usr/bin/oc"]
      args:
        - "rollout"
        - "latest"
        - "gateway"
    - name: rollout-dest1
      image: quay.io/openshift/origin-cli:latest
      command: ["/usr/bin/oc"]
      args:
        - "rollout"
        - "latest"
        - "dest1"
    - name: rollout-dest2
      image: quay.io/openshift/origin-cli:latest
      command: ["/usr/bin/oc"]
      args:
        - "rollout"
        - "latest"
        - "dest2"
    - name: rollout-dest3
      image: quay.io/openshift/origin-cli:latest
      command: ["/usr/bin/oc"]
      args:
        - "rollout"
        - "latest"
        - "dest3"
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-docker-image
  namespace: sample-tracing
spec:
  inputs:
    resources:
      - name: source-repo
        type: git
  outputs:
    resources:
      - name: builtImage
        type: image
  steps:
  - name: build
    image: quay.io/buildah/stable
    workingdir: /workspace/source-repo
    command: ['buildah', 'bud', '--tls-verify=false', '--layers', '-f', '.', '-t', '$(outputs.resources.builtImage.url)', '.']
    volumeMounts:
    - name: varlibcontainers
      mountPath: /var/lib/containers
    securityContext:
      privileged: true
  - name: push
    image: quay.io/buildah/stable
    command: ['buildah', 'push', '--tls-verify=false', '$(outputs.resources.builtImage.url)', 'docker://$(outputs.resources.builtImage.url)']
    volumeMounts:
    - name: varlibcontainers
      mountPath: /var/lib/containers
    securityContext:
      privileged: true
  volumes:
  - name: varlibcontainers
    emptyDir: {}
